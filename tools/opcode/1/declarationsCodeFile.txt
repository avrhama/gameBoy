void LD_nn_n(char* nn,char* n);
void LD_r1_r2(char* r1,char* r2);
void LD_A_n(char* A,char* n);
void LD_n_A(char* n,char* A);
void LD_A_$C(char* A,char* $C);
void LD_$C_A(char* $C,char* A);
void LD_A_$HLD(char* A,char* $HLD);
void LD_A_$HLminus(char* A,char* $HLminus);
void LDD_A_$HL(char* A,char* $HL);
void LD_$HLD_A(char* $HLD,char* A);
void LD_$HLminus_A(char* $HLminus,char* A);
void LDD_$HL_A(char* $HL,char* A);
void LD_A_$HLI(char* A,char* $HLI);
void LD_A_$HLplus(char* A,char* $HLplus);
void LDI_A_$HL(char* A,char* $HL);
void LD_$HLI_A(char* $HLI,char* A);
void LD_$HLplus_A(char* $HLplus,char* A);
void LDI_$HL_A(char* $HL,char* A);
void LDH_n_A(char* n,char* A);
void LDH_A_n(char* A,char* n);
void LD_n_nn(char* n,char* nn);
void LD_SP_HL(char* SP,char* HL);
void LD_HL_SP(char* none,char* none);
void LDHL_SP_$n(char* SP,char* $n);
void LD_$nn_SP(char* $nn,char* SP);
void PUSH_nn(char* nn,char* none);
void POP_nn(char* nn,char* none);
void ADD_A_n(char* A,char* n);
void ADC_A_n(char* A,char* n);
void SUB_n(char* n,char* none);
void SBC_A_n(char* A,char* n);
void AND_n(char* n,char* none);
void OR_n(char* n,char* none);
void XOR_n(char* n,char* none);
void CP_n(char* n,char* none);
void INC_n(char* n,char* none);
void DEC_n(char* n,char* none);
void ADD_HL_n(char* HL,char* n);
void ADD_SP_n(char* SP,char* n);
void INC_nn(char* nn,char* none);
void DEC_nn(char* nn,char* none);
void SWAP_n(char* n,char* none);
void DAA(char* none,char* none);
void CPL(char* none,char* none);
void CCF(char* none,char* none);
void SCF(char* none,char* none);
void NOP(char* none,char* none);
void HALT(char* none,char* none);
void STOP(char* none,char* none);
void DI(char* none,char* none);
void EI(char* none,char* none);
void RLCA(char* none,char* none);
void RLA(char* none,char* none);
void RRCA(char* none,char* none);
void RRA(char* none,char* none);
void RLC_n(char* n,char* none);
void RL_n(char* n,char* none);
void RRC_n(char* n,char* none);
void RR_n(char* n,char* none);
void SLA_n(char* n,char* none);
void SRA_n(char* n,char* none);
void SRL_n(char* n,char* none);
void BIT_$n_r(char* $n,char* r);
void SET_$n_r(char* $n,char* r);
void RES_$n_r(char* $n,char* r);
void JP_nn(char* nn,char* none);
void JP_cc_nn(char* cc,char* nn);
void JP_HL(char* HL,char* none);
void JR_n(char* n,char* none);
void JR_cc_n(char* cc,char* n);
void CALL_nn(char* nn,char* none);
void CALL_cc_nn(char* cc,char* nn);
void RST_n(char* n,char* none);
void RET(char* none,char* none);
void RET_cc(char* cc,char* none);
void RETI(char* none,char* none);
